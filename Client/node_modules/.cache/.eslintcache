[{"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/index.js":"1","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/App.js":"2","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/main.js":"3","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/utils/function/openLogin.js":"4","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Homepage.js":"5","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Services/Services.js":"6","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Navbar/NavBar.js":"7","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Welcome/Welcome.js":"8","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/CryptoWorld/CryptoWorld.js":"9","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/detailWorld/DetailWorld.js":"10","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/NFTList/NFTList.js":"11","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/SignIn/SignIn.js":"12","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/ItemList/ItemList.js":"13","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/MyDeal/Mydeal.js":"14","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Member/Member.js":"15","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Mypage/MyPage.js":"16","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Popup/Popup.js":"17","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Login/Login.js":"18","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Selling/Selling.js":"19","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Shop/Shop.js":"20","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/utils/function/function.js":"21","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Buy/Buy.js":"22"},{"size":312,"mtime":1641449289605,"results":"23","hashOfConfig":"24"},{"size":3589,"mtime":1642931654682,"results":"25","hashOfConfig":"24"},{"size":935,"mtime":1642906952343,"results":"26","hashOfConfig":"24"},{"size":163,"mtime":1641540577625,"results":"27","hashOfConfig":"24"},{"size":287,"mtime":1641449289604,"results":"28","hashOfConfig":"24"},{"size":1527,"mtime":1641449289604,"results":"29","hashOfConfig":"24"},{"size":3067,"mtime":1642931678544,"results":"30","hashOfConfig":"24"},{"size":1264,"mtime":1642221907421,"results":"31","hashOfConfig":"24"},{"size":1894,"mtime":1641971847192,"results":"32","hashOfConfig":"24"},{"size":3997,"mtime":1642059642142,"results":"33","hashOfConfig":"24"},{"size":1356,"mtime":1642395882060,"results":"34","hashOfConfig":"24"},{"size":1701,"mtime":1642929148826,"results":"35","hashOfConfig":"24"},{"size":1986,"mtime":1641950087848,"results":"36","hashOfConfig":"24"},{"size":3127,"mtime":1642494889123,"results":"37","hashOfConfig":"24"},{"size":2038,"mtime":1642661002552,"results":"38","hashOfConfig":"24"},{"size":2795,"mtime":1642395867158,"results":"39","hashOfConfig":"24"},{"size":956,"mtime":1642139440192,"results":"40","hashOfConfig":"24"},{"size":2566,"mtime":1642910417157,"results":"41","hashOfConfig":"24"},{"size":1892,"mtime":1642402182488,"results":"42","hashOfConfig":"24"},{"size":3196,"mtime":1642138448756,"results":"43","hashOfConfig":"24"},{"size":176,"mtime":1641891530266,"results":"44","hashOfConfig":"24"},{"size":3601,"mtime":1642999992409,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"3pp614",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/index.js",[],["100","101"],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/App.js",["102","103"],"import \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport {\n  NavBar,\n  Homepage,\n  MyPage,\n  CryptoWorld,\n  DetailWorld,\n  Shop,\n  Login,\n  SignIn,\n  ItemList,\n  Popup,\n  Mydeal,\n  Buy,\n} from \"./components/main\";\nimport { useEffect, useState } from \"react\";\n\nimport OpenLogin from \"@toruslabs/openlogin\";\nimport { VERIFIER } from \"./utils/function/openLogin\";\nimport { ethers } from \"ethers\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [user, SetUser] = useState(window.localStorage.getItem(\"User\"));\n  const [openlogin, SetOpenLogin] = useState();\n  const [privKey, SetPrivKey] = useState(false);\n  const [address, SetAddress] = useState(false);\n  const [player, SetPlayer] = useState(false);\n  const [NFTData, SetNFTData] = useState(false);\n  const [metamask_address, SetMetamask_address] = useState(\n    window.localStorage.getItem(\"meta_User\") || false\n  );\n\n  const onMount = async () => {\n    const openlogin = new OpenLogin({\n      clientId: VERIFIER.clientId,\n      network: \"testnet\",\n    });\n    SetOpenLogin(openlogin);\n\n    await openlogin.init();\n    SetPrivKey(openlogin.privKey);\n\n    try {\n      const wallet = await new ethers.Wallet(\n        openlogin.privKey,\n        ethers.getDefaultProvider()\n      );\n      const address = await wallet.getAddress();\n      SetAddress(address);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getUserData = async () => {\n    if (user !== null) {\n      console.log(user);\n      await axios\n        .get(\"http://localhost:8080/vefiry\", {\n          headers: {\n            Authorization: \"Bearer\" + user,\n          },\n        })\n        .then((result) => {\n          SetPlayer(result.data);\n        });\n    }\n    if (address !== false) {\n      await axios\n        .post(\"http://localhost:8080/vefiry_google\", {\n          address: address,\n        })\n        .then((result) => {\n          SetPlayer(result.data.data);\n        });\n    }\n    if (metamask_address !== false) {\n      await axios\n        .post(\"http://localhost:8080/vefiry_google\", {\n          address: metamask_address,\n        })\n        .then((result) => {\n          SetPlayer(result.data.data);\n        });\n    }\n  };\n\n  useEffect(() => {\n    onMount();\n    getUserData();\n  }, [address]);\n\n  return (\n    <div className=\"App\">\n      <NavBar\n        address={address}\n        user={user}\n        player={player}\n        openlogin={openlogin}\n        metamask_address={metamask_address}\n      />\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Homepage />\n        </Route>\n        <Route path=\"/Shop\">\n          <Shop player={player} />\n        </Route>\n\n        <Route path=\"/Popup\">\n          <Popup />\n        </Route>\n\n        <Route path=\"/Login\">\n          <Login\n            SetUser={SetUser}\n            openlogin={openlogin}\n            SetPrivKey={SetPrivKey}\n            SetMetamask_address={SetMetamask_address}\n          />\n        </Route>\n        <Route path=\"/MyPage\">\n          <MyPage player={player} SetNFTData={SetNFTData} NFTData={NFTData} />\n        </Route>\n        <Route path=\"/CryptoWorld\">\n          <CryptoWorld />\n        </Route>\n        <Route path=\"/detail/:id\">\n          <DetailWorld player={player} />\n        </Route>\n        <Route path=\"/SignIn\">\n          <SignIn />\n        </Route>\n        <Route path=\"/ItemList\">\n          <ItemList />\n        </Route>\n        <Route path=\"/Deal\">\n          <Mydeal player={player} />\n        </Route>\n        <Route path=\"/Buy\">\n          <Buy player={player} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/main.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/utils/function/openLogin.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Homepage.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Services/Services.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Navbar/NavBar.js",["104"],"import React, { useEffect, useState } from \"react\";\nimport \"./NavBar.scss\";\nimport { Link } from \"react-router-dom\";\nimport schedule from \"node-schedule\";\nimport axios from \"axios\";\n\nfunction NavBar({ player, user, address, openlogin, metamask_address }) {\n  const [time, SetTime] = useState(new Date().toLocaleTimeString());\n  const [ch, SetCh] = useState(false);\n\n  useEffect(() => {\n    const setTime = () => {\n      SetTime(new Date().toLocaleTimeString());\n    };\n\n    let date = new Date();\n    date.setSeconds(date.getSeconds() + 1);\n    schedule.scheduleJob(date, () => {\n      setTime();\n    });\n\n    const rule = new schedule.RecurrenceRule();\n    rule.minute = 1;\n\n    const selling_item = new schedule.RecurrenceRule();\n    selling_item.second = 1;\n\n    const charge_soldier = new schedule.RecurrenceRule();\n    charge_soldier.hour = 1;\n\n    const job = () => {\n      schedule.scheduleJob(rule, async () => {\n        await axios\n          .get(\"http://localhost:8080/Map/GiveToken\")\n          .then((result) => {\n            console.log(result.data.message);\n          });\n      });\n\n      schedule.scheduleJob(selling_item, async () => {\n        await axios\n          .get(\"http://localhost:8080/SellingItem/trade\")\n          .then((result) => {\n            console.log(\"거래소 훑어봄!\");\n          });\n      });\n\n      schedule.scheduleJob(charge_soldier, async () => {\n        await axios.get(\"http://localhost:8080/charge\");\n      });\n    };\n\n    if (ch === false) {\n      job();\n      SetCh(true);\n    }\n  }, [time]);\n\n  const deleteUser = async () => {\n    if (user) {\n      window.localStorage.removeItem(\"User\");\n      window.location.reload();\n    }\n\n    if (address) {\n      await openlogin.logout();\n      window.location.reload();\n    }\n    if (metamask_address) {\n      window.localStorage.removeItem(\"meta_User\");\n      setTimeout(() => {\n        window.location.reload();\n      }, 1000);\n    }\n  };\n\n  return (\n    <div className=\"NavBar_app\">\n      <Link to=\"/\">\n        <div className=\"NavBar_title\">\n          <img src=\"./img/logo.png\" alt=\"logo\" />\n        </div>\n      </Link>\n\n      <div className=\"Navbar_text\">\n        <ul className=\"NavBar_ul\">\n          <Link to=\"/MyPage\" className=\"menu-item\">\n            <li>My Page</li>\n          </Link>\n\n          <Link to=\"/CryptoWorld\" className=\"menu-item\">\n            <li>Crypto World</li>\n          </Link>\n          {player ? (\n            <li className=\"Logout\" onClick={deleteUser}>\n              Logout\n            </li>\n          ) : (\n            <Link to=\"/Login\" className=\"menu-item\">\n              <li>Login</li>\n            </Link>\n          )}\n\n          <Link to=\"/Shop\" className=\"menu-item\">\n            <li>Shop</li>\n          </Link>\n          {player ? (\n            <Link to=\"/Deal\" className=\"menu-item\">\n              <li>Deal</li>\n            </Link>\n          ) : (\n            \"\"\n          )}\n          <Link to=\"/Buy\" className=\"menu-item\">\n            <li>Buy</li>\n          </Link>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default NavBar;\n","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Welcome/Welcome.js",["105"],"import React from \"react\";\n// import { makeShortAddress } from \"../../utils/function/function\";\n\nimport \"./Welcome.scss\";\n\nimport { Link } from \"react-router-dom\";\n\nfunction Welcome() {\n  return (\n    <div className=\"Welcome_App\">\n      <div className=\"Welcome_one\">\n        <div className=\"Welcome_Title\">\n          <h1 className=\"Welcome_h1\">\n            Play & Earn<br></br> on Trusted Crypto\n          </h1>\n          <div className=\"Welcome_explain\">\n            Explore the crypto world. Play and Earn in Crypto World <br></br>\n            BlockChain will lead You!! Just join and Play!\n          </div>\n        </div>\n        <div className=\"Welcome_lists\">\n          <div className=\"Welcome_list\">Reliability</div>\n          <div className=\"Welcome_list\">Security</div>\n          <div className=\"Welcome_list\">Ethereum</div>\n          <div className=\"Welcome_list\">Web 3.0</div>\n          <div className=\"Welcome_list\">Low fees</div>\n          <div className=\"Welcome_list\">BlockChain</div>\n        </div>\n      </div>\n\n      <div className=\"Char_App\">\n        <div className=\"Char_Img\">\n          <img src=\"./img/전사.gif\" alt=\"전사\" />\n        </div>\n\n        <div className=\"Char_form\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Welcome;\n","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/CryptoWorld/CryptoWorld.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/detailWorld/DetailWorld.js",["106","107","108"],"import React, { useState, useEffect } from \"react\";\nimport \"./DetailWorld.scss\";\nimport axios from \"axios\";\n\nfunction DetailWorld({ player }) {\n  const idx = useState(window.location.pathname.split(\":\")[1]);\n  const [data, SetData] = useState(false);\n  const [defense_owner, Set_Defense_owner] = useState(false);\n  const [soldier, SetSoldier] = useState(false);\n  const [data_ch, Set_Data_ch] = useState(false);\n\n  const changeSoldier = async (e) => {\n    SetSoldier(e.target.value);\n  };\n\n  useEffect(() => {\n    const getData = async () => {\n      await axios\n        .get(`http://localhost:8080/Map/detail/${idx[0]}`)\n        .then((result) => {\n          SetData(result.data[0]);\n          Set_Data_ch(true);\n        });\n    };\n\n    const getCharacter_force = async () => {\n      await axios\n        .post(\"http://localhost:8080/Map/defense_owner\", {\n          address: data.owner,\n        })\n        .then((result) => {\n          console.log(result);\n          Set_Defense_owner(result.data.data);\n        });\n    };\n    getData();\n    if (data_ch !== false && data.owner !== \"none\") {\n      getCharacter_force();\n    }\n  }, [data_ch]);\n\n  const get = async () => {\n    if (soldier === false) {\n      alert(\"1명 이상의 병력으로 공격하세요!\");\n    } else if (data.owner === player.address) {\n      alert(\"자기 자신을 공격할수는 없습니다\");\n    } else if (player === false) {\n      alert(\"로그인 해주세요!\");\n      window.location.replace(\"http://localhost:3000/Login\");\n    } else {\n      await axios\n        .post(\"http://localhost:8080/Map/updateMap\", {\n          idx: idx[0],\n          AttackAddress: player.address,\n          soldier: soldier,\n          owner: data.owner,\n          defense_owner: defense_owner,\n        })\n        .then((result) => {\n          alert(result.data.message);\n          window.location.reload();\n        });\n    }\n  };\n\n  return (\n    <>\n      {data === false ? (\n        <img\n          className=\"Loading\"\n          src=\"https://t1.daumcdn.net/cfile/tistory/233F6D505786DA870A\"\n          alt=\"loading\"\n        />\n      ) : (\n        <div className=\"detail_wrap\">\n          {data.owner === \"none\" ? (\n            <img\n              src=\"https://www.wallpapertip.com/wmimgs/7-75917_zelda-wallpapers8-zelda-wallpaper-4k-desktop.jpg\"\n              className=\"img\"\n            />\n          ) : (\n            <img\n              src=\"https://w.namu.la/s/e764cbd6426bff27978421f75aa3ebdabe3effe633b089a33def704e297a3dd6cb0305ebaa2a86bbc90921343c64ba852afb8dc4aa2f09a70a4f6664f25ac51dd241679bde05297f84f96c1a3a0ac0c6\"\n              className=\"img\"\n            />\n          )}\n\n          <div className=\"detail_box\">\n            <div className=\"detail_state\">\n              <div className=\"state01\">\n                <div>\n                  MAP : <span>{data.MapName}</span>\n                </div>\n                <div>\n                  topography : <span>{data.topography}</span>\n                </div>\n                <div>\n                  GiveToken : <span>{data.GiveToken}</span>\n                </div>\n                <div>\n                  Owner : <span>{data.owner}</span>\n                </div>\n                <div>\n                  defense Soldier : <span>{data.force}</span>\n                </div>\n                <div>\n                  {defense_owner === false\n                    ? \"\"\n                    : \"Character force : \" + defense_owner.Pow}\n                </div>\n              </div>\n            </div>\n            <div className=\"state02\">\n              <h4>My Status</h4>\n              <div> Soldier : {player.Soldier}</div>\n              <div> PoW : {player.Pow}</div>\n            </div>\n            <div className=\"Attack_div\">\n              <input type=\"text\" onChange={changeSoldier} />\n              <button className=\"Attack_button\" onClick={get}>\n                Attack\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default DetailWorld;\n","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/NFTList/NFTList.js",["109"],"import React, { useState } from \"react\";\nimport { Selling } from \"../main\";\n\nimport \"./NFTList.scss\";\nfunction NFTList({ NFTData, player }) {\n  const [sell, SetSell] = useState(false);\n  const [want_nft, Set_Want_nft] = useState(false);\n\n  return (\n    <>\n      {NFTData === false ? (\n        \"\"\n      ) : (\n        <>\n          {NFTData.map((NFT, idx) => {\n            return (\n              <div className=\"NFTList\" key={idx}>\n                <div className=\"NFTList_app\">\n                  <div className=\"NFT_img\">\n                    <img src={NFT.src} />\n                  </div>\n                  <div className=\"NFT_name\">{NFT.name}</div>\n                  <div className=\"NFT_grade\">등급 : {NFT.grade}</div>\n                  <div className=\"NFT_pow\">pow : {NFT.pow}</div>\n                  <button\n                    className=\"NFT_sell\"\n                    onClick={() => {\n                      SetSell(true);\n                      Set_Want_nft(NFT);\n                    }}\n                  >\n                    판매하기\n                  </button>\n                </div>\n              </div>\n            );\n          })}\n          {sell === false ? (\n            \"\"\n          ) : (\n            <Selling want_nft={want_nft} SetSell={SetSell} player={player} />\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nexport default NFTList;\n","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/SignIn/SignIn.js",["110"],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport \"./SignIn.css\";\nfunction SignIn() {\n  const [name, SetName] = useState(\"\");\n  const [password, SetPassword] = useState(\"\");\n  const [ch, SetCh] = useState(\"\");\n\n  const NameChange = (e) => {\n    SetName(e.target.value);\n  };\n\n  const PasswordChange = (e) => {\n    SetPassword(e.target.value);\n  };\n\n  const PasswordCh = (e) => {\n    SetCh(e.target.value);\n  };\n  const sendData = async () => {\n    if (name.length !== 0 && password.length !== 0 && ch.length !== 0) {\n      if (password !== ch) {\n        alert(\"패스워드가 다릅니다!\");\n      } else {\n        await axios\n          .post(\"http://localhost:8080/makeuser\", {\n            ID: name,\n            password: password,\n          })\n          .then((result) => {\n            // alert(result.data.message);\n            window.location.replace(\"http://localhost:3000/Login\");\n          });\n      }\n    } else {\n      alert(\"값을 확인해 주세요!\");\n    }\n  };\n\n  return (\n    <div className=\"SignIn_app\">\n      <img src=\"./img/로그인 배경화면.jpeg\" className=\"background_img\" />\n      <div className=\"SignIn_container\">\n        <div>아이디</div>\n        <input type=\"text\" onChange={NameChange} placeholder=\"Name_input\" />\n        <div>패스워드</div>\n        <input\n          type=\"password\"\n          onChange={PasswordChange}\n          placeholder=\"Password\"\n        />\n        <div>패스워드 확인</div>\n        <input\n          type=\"password\"\n          onChange={PasswordCh}\n          placeholder=\"Password_ch\"\n        />\n        <button onClick={sendData}>회원가입</button>\n      </div>\n    </div>\n  );\n}\n\nexport default SignIn;\n","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/ItemList/ItemList.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/MyDeal/Mydeal.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Member/Member.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Mypage/MyPage.js",["111","112","113"],"import React, { useEffect, useState } from \"react\";\nimport \"./MyPage.scss\";\n\nimport { NFTList } from \"../main\";\nimport axios from \"axios\";\n\nfunction MyPage({ player, NFTData, SetNFTData }) {\n  const getNFTList = async () => {\n    if (player !== undefined) {\n      await axios\n        .post(\"http://localhost:8080/Item/getItem_NFT\", {\n          address: player.address,\n        })\n        .then((result) => {\n          SetNFTData(result.data);\n        });\n    }\n  };\n\n  const upgrade = async (title) => {\n    await axios\n      .post(\"http://localhost:8080/Character/oneCharacter\", {\n        title: title,\n        address: player.address,\n      })\n      .then((result) => {\n        alert(result.data.message);\n        window.location.reload();\n      });\n  };\n\n  useEffect(() => {\n    if (player !== undefined) {\n      getNFTList();\n    }\n  }, [player]);\n\n  return (\n    <>\n      {player === false ? (\n        <div className=\"Login_box\">\n          <img src=\"./img/Login.png\" className=\"Login_img\" />\n        </div>\n      ) : (\n        <>\n          <div className=\"MyPage_App\">\n            <div className=\"Status_title\">\n              <h2>Welcome to Your Page</h2>\n              <h2> You can See your Status and Equiment</h2>\n              <h2> Enjoy Your Time</h2>\n            </div>\n            <div className=\"Status_Status\">\n              <div>주소 : {player.address}</div>\n              <div>PoW : {player.Pow}</div>\n              <div>병력수 : {player.Soldier}</div>\n              <div>병력제한 : {player.limit}</div>\n              <div>Token : {player.Token}</div>\n              <div>\n                소유한 땅 :\n                {player.HavingLands.map((a, idx) => {\n                  return <span key={idx}>{a}, </span>;\n                })}\n              </div>\n              <div className=\"Character_up\">\n                <div className=\"Up_pow\">\n                  <button\n                    onClick={() => {\n                      upgrade(\"Pow\");\n                    }}\n                  >\n                    Upgrade Pow\n                  </button>\n                  <div className=\"Up_Pow_div\">50 Token</div>\n                </div>\n                <div className=\"Up_Limit\">\n                  <button\n                    onClick={() => {\n                      upgrade(\"limit\");\n                    }}\n                  >\n                    Upgrade Limit\n                  </button>{\" \"}\n                  <div className=\"Up_Limit_div\">100 Token</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"Status_app\">\n            <div className=\"Status_container\">\n              <NFTList NFTData={NFTData} player={player} />\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default MyPage;\n","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Popup/Popup.js",["114"],"import React from \"react\";\nimport \"./Popup.scss\";\nimport { Link } from \"react-router-dom\"; //이미지를 누르면 마이페이지로 가도록 설정할 생각입니다.\nfunction Popup({ buttonPopup, rouletteItem, setButtonPopup }) {\n  return rouletteItem && buttonPopup ? (\n    <div className=\"popup\">\n      <div className=\"popup_inner\">\n        <button className=\"popup_button\" onClick={() => setButtonPopup(false)}>\n          X\n        </button>\n        <div className=\"popup_img_div\">\n          <img src={rouletteItem.src} alt=\"item\" className=\"popup_img\" />\n        </div>\n        <div className=\"popup_text\">\n          <div>\n            <span>name</span> : {rouletteItem.name}\n          </div>\n          <div>\n            <span>grade</span> : {rouletteItem.grade}\n          </div>\n          <div>\n            <span>Pow</span> : {rouletteItem.pow}\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Popup;\n","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Login/Login.js",["115"],"import React, { useState } from \"react\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { VERIFIER } from \"../../utils/function/openLogin\";\n\nfunction LogIn({ SetUser, openlogin, SetPrivKey, SetMetamask_address }) {\n  const [ID, SetID] = useState(false);\n  const [password, SetPassword] = useState(false);\n\n  const IdChange = (e) => {\n    SetID(e.target.value);\n  };\n  const passwordChange = (e) => {\n    SetPassword(e.target.value);\n  };\n  const Login = async () => {\n    if (ID === false || password === false) {\n      alert(\"정확한 값을 입력해 주세요!!\");\n    } else {\n      await axios\n        .post(\"http://localhost:8080/Login\", {\n          ID: ID,\n          password: password,\n        })\n        .then((result) => {\n          if ((result.data.message = \"로그인 성공!\")) {\n            window.localStorage.setItem(\n              \"User\",\n              JSON.stringify(result.data.Token)\n            );\n            window.location.replace(\"http://localhost:3000\");\n          } else {\n            alert(\"재 로그인 부탁..ㅠ\");\n          }\n        });\n    }\n  };\n\n  const onLoginGoogle = async () => {\n    await openlogin.login({\n      loginProvider: VERIFIER.loginProvider,\n      redirectUrl: \"http://localhost:3000/\",\n    });\n    SetPrivKey(openlogin.privKey);\n  };\n\n  const onLoginMetaMask = async () => {\n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    window.localStorage.setItem(\"meta_User\", accounts[0]);\n    setTimeout(() => {\n      window.location.replace(\"http://localhost:3000\");\n    }, 1000);\n  };\n\n  return (\n    <div className=\"Login_box\">\n      <img src=\"./img/로그인 배경화면.jpeg\" className=\"background_img\" />\n      <div className=\"Login_container\">\n        <div>아이디</div>\n        <input type=\"text\" onChange={IdChange} placeholder=\"Write Your ID\" />\n        <div> 패스워드</div>\n        <input\n          type=\"password\"\n          onChange={passwordChange}\n          placeholder=\"Write Your Password\"\n        />\n        <div className=\"login_button\">\n          <button onClick={Login}>로그인</button>\n\n          <button className=\"Google_button\" onClick={onLoginGoogle}>\n            Google_Login\n          </button>\n          <button className=\"Google_button\" onClick={onLoginMetaMask}>\n            Meta_Mask\n          </button>\n        </div>\n\n        <Link to=\"/SignIn\">\n          <button className=\"signin\">회원가입</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default LogIn;\n","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Selling/Selling.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Shop/Shop.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/utils/function/function.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Buy/Buy.js",["116"],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":27,"column":10,"nodeType":"123","messageId":"124","endLine":27,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":92,"column":6,"nodeType":"127","endLine":92,"endColumn":15,"suggestions":"128"},{"ruleId":"125","severity":1,"message":"129","line":57,"column":6,"nodeType":"127","endLine":57,"endColumn":12,"suggestions":"130"},{"ruleId":"121","severity":1,"message":"131","line":6,"column":10,"nodeType":"123","messageId":"124","endLine":6,"endColumn":14},{"ruleId":"125","severity":1,"message":"132","line":40,"column":6,"nodeType":"127","endLine":40,"endColumn":15,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":77,"column":13,"nodeType":"136","endLine":80,"endColumn":15},{"ruleId":"134","severity":1,"message":"135","line":82,"column":13,"nodeType":"136","endLine":85,"endColumn":15},{"ruleId":"134","severity":1,"message":"135","line":20,"column":21,"nodeType":"136","endLine":20,"endColumn":42},{"ruleId":"134","severity":1,"message":"135","line":42,"column":7,"nodeType":"136","endLine":42,"endColumn":67},{"ruleId":"121","severity":1,"message":"137","line":1,"column":28,"nodeType":"123","messageId":"124","endLine":1,"endColumn":36},{"ruleId":"125","severity":1,"message":"138","line":36,"column":6,"nodeType":"127","endLine":36,"endColumn":14,"suggestions":"139"},{"ruleId":"134","severity":1,"message":"135","line":42,"column":11,"nodeType":"136","endLine":42,"endColumn":62},{"ruleId":"121","severity":1,"message":"131","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":60,"column":7,"nodeType":"136","endLine":60,"endColumn":67},{"ruleId":"125","severity":1,"message":"140","line":66,"column":6,"nodeType":"127","endLine":66,"endColumn":14,"suggestions":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'privKey' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.","ArrayExpression",["144"],"React Hook useEffect has a missing dependency: 'ch'. Either include it or remove the dependency array.",["145"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'data.owner' and 'idx'. Either include them or remove the dependency array.",["146"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getNFTList'. Either include it or remove the dependency array.",["147"],"React Hook useEffect has a missing dependency: 'getUser_balance'. Either include it or remove the dependency array.",["148"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [address, getUserData]",{"range":"159","text":"160"},"Update the dependencies array to be: [ch, time]",{"range":"161","text":"162"},"Update the dependencies array to be: [data.owner, data_ch, idx]",{"range":"163","text":"164"},"Update the dependencies array to be: [getNFTList, player]",{"range":"165","text":"166"},"Update the dependencies array to be: [getUser_balance, player]",{"range":"167","text":"168"},[2245,2254],"[address, getUserData]",[1520,1526],"[ch, time]",[1130,1139],"[data.owner, data_ch, idx]",[841,849],"[getNFTList, player]",[1697,1705],"[getUser_balance, player]"]