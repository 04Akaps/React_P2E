[{"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/index.js":"1","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/App.js":"2","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/main.js":"3","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/utils/function/openLogin.js":"4","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Homepage.js":"5","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Shop/Shop.js":"6","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Navbar/NavBar.js":"7","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Services/Services.js":"8","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Mypage/MyPage.js":"9","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Welcome/Welcome.js":"10","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/SignIn/SignIn.js":"11","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/NFTList/NFTList.js":"12","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/CryptoWorld/CryptoWorld.js":"13","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Member/Member.js":"14","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/detailWorld/DetailWorld.js":"15","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Login/Login.js":"16"},{"size":312,"mtime":1641449289605,"results":"17","hashOfConfig":"18"},{"size":2615,"mtime":1641818834588,"results":"19","hashOfConfig":"18"},{"size":670,"mtime":1641561285907,"results":"20","hashOfConfig":"18"},{"size":163,"mtime":1641540577625,"results":"21","hashOfConfig":"18"},{"size":287,"mtime":1641449289604,"results":"22","hashOfConfig":"18"},{"size":116,"mtime":1641450296761,"results":"23","hashOfConfig":"18"},{"size":2388,"mtime":1641622439368,"results":"24","hashOfConfig":"18"},{"size":1527,"mtime":1641449289604,"results":"25","hashOfConfig":"18"},{"size":945,"mtime":1641818887745,"results":"26","hashOfConfig":"18"},{"size":1392,"mtime":1641449289605,"results":"27","hashOfConfig":"18"},{"size":1446,"mtime":1641815040319,"results":"28","hashOfConfig":"18"},{"size":325,"mtime":1641802613482,"results":"29","hashOfConfig":"18"},{"size":1811,"mtime":1641451147178,"results":"30","hashOfConfig":"18"},{"size":1501,"mtime":1641449289586,"results":"31","hashOfConfig":"18"},{"size":1195,"mtime":1641471355113,"results":"32","hashOfConfig":"18"},{"size":2013,"mtime":1641816383432,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"3pp614",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/index.js",[],["70","71"],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/App.js",["72","73"],"import \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport {\n  NavBar,\n  Homepage,\n  MyPage,\n  CryptoWorld,\n  DetailWorld,\n  Shop,\n  Login,\n  SignIn,\n} from \"./components/main\";\nimport { useEffect, useState } from \"react\";\n\nimport OpenLogin from \"@toruslabs/openlogin\";\nimport { VERIFIER } from \"./utils/function/openLogin\";\nimport { ethers } from \"ethers\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [user, SetUser] = useState(\n    window.localStorage.getItem(\"User\") || false\n  );\n  const [openlogin, SetOpenLogin] = useState();\n  const [privKey, SetPrivKey] = useState(false);\n  const [address, SetAddress] = useState(false);\n  const [player, SetPlayer] = useState(false);\n\n  console.log(player);\n\n  const onMount = async () => {\n    const openlogin = new OpenLogin({\n      clientId: VERIFIER.clientId,\n      network: \"testnet\",\n    });\n    SetOpenLogin(openlogin);\n\n    await openlogin.init();\n    SetPrivKey(openlogin.privKey);\n\n    try {\n      const wallet = await new ethers.Wallet(\n        openlogin.privKey,\n        ethers.getDefaultProvider()\n      );\n      const address = await wallet.getAddress();\n      SetAddress(address);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getUserData = async () => {\n    if (user !== false) {\n      await axios\n        .get(\"http://localhost:8080/vefiry\", {\n          headers: {\n            Authorization: user,\n          },\n        })\n        .then((result) => {\n          SetPlayer(result.data);\n        });\n    }\n    if (address !== false) {\n      await axios\n        .post(\"http://localhost:8080/vefiry_google\", {\n          address: address,\n        })\n        .then((result) => {\n          SetPlayer(result.data.data);\n        });\n    }\n  };\n\n  useEffect(() => {\n    onMount();\n    getUserData();\n  }, [address]);\n\n  return (\n    <div className=\"App\">\n      <NavBar address={address} user={user} openlogin={openlogin} />\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Homepage />\n        </Route>\n        <Route path=\"/Shop\">\n          <Shop />\n        </Route>\n        <Route path=\"/Login\">\n          <Login\n            SetUser={SetUser}\n            openlogin={openlogin}\n            SetPrivKey={SetPrivKey}\n          />\n        </Route>\n        <Route path=\"/MyPage\">\n          <MyPage player={player} />\n        </Route>\n        <Route path=\"/CryptoWorld\">\n          <CryptoWorld />\n        </Route>\n        <Route path=\"/detail/:id\">\n          <DetailWorld />\n        </Route>\n        <Route path=\"/SignIn\">\n          <SignIn />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/main.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/utils/function/openLogin.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Homepage.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Shop/Shop.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Navbar/NavBar.js",["74"],"import React, { useEffect, useState } from \"react\";\nimport \"./NavBar.scss\";\nimport { Link } from \"react-router-dom\";\nimport schedule from \"node-schedule\";\nimport axios from \"axios\";\n\nfunction NavBar({ address, user, openlogin }) {\n  const [time, SetTime] = useState(new Date().toLocaleTimeString());\n  const [ch, SetCh] = useState(false);\n\n  useEffect(() => {\n    const setTime = () => {\n      SetTime(new Date().toLocaleTimeString());\n    };\n\n    let date = new Date();\n    date.setSeconds(date.getSeconds() + 1);\n    schedule.scheduleJob(date, () => {\n      setTime();\n    });\n\n    const rule = new schedule.RecurrenceRule();\n    rule.second = 10;\n\n    const job = () =>\n      schedule.scheduleJob(rule, () => {\n        // 이러면 10초가 될때마다 함수가 실행됨\n        // === 1분 간격으로 함수가 실행된다.\n        // 테스트에 용이하기위해서 1분간격으로 설정\n        axios.get(\"http://localhost:8080/Map/GiveToken\");\n      });\n\n    if (ch === false) {\n      job();\n      SetCh(true);\n    }\n  }, [time]);\n\n  const deleteUser = async () => {\n    if (user) {\n      window.localStorage.removeItem(\"User\");\n      window.location.reload();\n    }\n\n    if (address) {\n      await openlogin.logout();\n      window.location.reload();\n    }\n  };\n  // time은 단순히 시간을 계속 갱신해 주는 것\n  // 그러면 내가 필요한 것은 일정시간에 토큰을 DB를 뒤져서 owner값들을 뺴오고 해당 owne에게 토큰을 전송해주는 로직이 필요\n  //\n\n  return (\n    <div className=\"NavBar_app\">\n      <Link to=\"/\">\n        <div className=\"NavBar_title\">\n          <img src=\"./img/logo.png\" alt=\"logo\" />\n        </div>\n      </Link>\n      {time}\n\n      <div>\n        <ul className=\"NavBar_ul\">\n          <Link to=\"/MyPage\" className=\"menu-item\">\n            <li>My Page</li>\n          </Link>\n\n          <Link to=\"/CryptoWorld\" className=\"menu-item\">\n            <li>Crypto World</li>\n          </Link>\n          {user || address ? (\n            <li className=\"Logout\" onClick={deleteUser}>\n              Logout\n            </li>\n          ) : (\n            <Link to=\"/Login\" className=\"menu-item\">\n              <li>Login</li>\n            </Link>\n          )}\n\n          <Link to=\"/Shop\" className=\"menu-item\">\n            <li>Shop</li>\n          </Link>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default NavBar;\n","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Services/Services.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Mypage/MyPage.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Welcome/Welcome.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/SignIn/SignIn.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/NFTList/NFTList.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/CryptoWorld/CryptoWorld.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Member/Member.js",[],"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/detailWorld/DetailWorld.js",["75","76"],"import React, { useState, useEffect } from \"react\";\nimport \"./DetailWorld.scss\";\nimport axios from \"axios\";\nfunction DetailWorld() {\n  const idx = useState(window.location.pathname.split(\":\")[1]);\n  const [data, SetData] = useState(false);\n\n  useEffect(() => {\n    const getData = async () => {\n      await axios\n        .get(`http://localhost:8080/Map/detail/${idx[0]}`)\n        .then((result) => SetData(result.data));\n    };\n    getData();\n  }, []);\n\n  // 이거 img는 서버 로딩창이에요\n  // 그냥 데이터를 불러오는데에 시간이 걸리기 떄문에 그시간동안 로딩창 보여주려고 적어놓았으니\n\n  // 작성하기 이해가 안되시면 일단 냅둬주세요 제가 후에 작성해 볼게요!\n\n  // 화이팅!\n\n  //   <img\n  //             className=\"Loading\"\n  //             src=\"https://t1.daumcdn.net/cfile/tistory/233F6D505786DA870A\"\n  //             alt=\"loading\"\n  //           />\n\n  const get = async () => {\n    await axios.post(\"http://localhost:8080/Map/updateMap\", {\n      idx: idx[0],\n      AttackAddress: \"aaaaa\",\n    });\n  };\n  return (\n    <div>\n      <button onClick={get}>onclick</button>\n    </div>\n  );\n}\n\nexport default DetailWorld;\n","/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Login/Login.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":25,"column":10,"nodeType":"83","messageId":"84","endLine":25,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":78,"column":6,"nodeType":"87","endLine":78,"endColumn":15,"suggestions":"88"},{"ruleId":"85","severity":1,"message":"89","line":37,"column":6,"nodeType":"87","endLine":37,"endColumn":12,"suggestions":"90"},{"ruleId":"81","severity":1,"message":"91","line":6,"column":10,"nodeType":"83","messageId":"84","endLine":6,"endColumn":14},{"ruleId":"85","severity":1,"message":"92","line":15,"column":6,"nodeType":"87","endLine":15,"endColumn":8,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'privKey' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect has a missing dependency: 'ch'. Either include it or remove the dependency array.",["97"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'idx'. Either include it or remove the dependency array.",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [address, getUserData]",{"range":"105","text":"106"},"Update the dependencies array to be: [ch, time]",{"range":"107","text":"108"},"Update the dependencies array to be: [idx]",{"range":"109","text":"110"},[1801,1810],"[address, getUserData]",[950,956],"[ch, time]",[448,450],"[idx]"]