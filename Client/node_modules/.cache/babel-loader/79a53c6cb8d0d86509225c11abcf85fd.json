{"ast":null,"code":"var _jsxFileName = \"/Users/yuhojin/Desktop/destiny No civilization/Client/src/components/CryptoWorld/CryptoWorld.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./CryptoWorld.scss\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CryptoWorld(_ref) {\n  _s();\n\n  let {\n    Map\n  } = _ref;\n  const [data, SetData] = useState(Map);\n  console.log(data[0]);\n  useEffect(async () => {\n    if (data === false) {\n      await axios.get(\"http://localhost:8080/Map/AllMap\").then(a => SetData(a.data));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"World_App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Map_container\",\n      children: data[0].owner.map((reuslt, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Map_App\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Map_img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./img/Map/OuTLAND.jpeg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Map_Text\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Map_name\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"mapName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 19\n              }, this), \" \", data[0].MapName[idx]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Map_topography\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"topography\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 19\n              }, this), \" mountain\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Map_Token\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Token\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 19\n              }, this), \" 3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Map_Owner\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Owner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }, this), \" sdlkfsl... sdf\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CryptoWorld, \"i9px7LPONCE+M22WR5LwwAJRh9E=\");\n\n_c = CryptoWorld;\nexport default CryptoWorld;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoWorld\");","map":{"version":3,"sources":["/Users/yuhojin/Desktop/destiny No civilization/Client/src/components/CryptoWorld/CryptoWorld.js"],"names":["React","useEffect","useState","axios","CryptoWorld","Map","data","SetData","console","log","get","then","a","owner","map","reuslt","idx","MapName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,SAASC,WAAT,OAA8B;AAAA;;AAAA,MAAT;AAAEC,IAAAA;AAAF,GAAS;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAACG,GAAD,CAAhC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAAC,CAAD,CAAhB;AAEAL,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIK,IAAI,KAAK,KAAb,EAAoB;AAClB,YAAMH,KAAK,CACRO,GADG,CACC,kCADD,EAEHC,IAFG,CAEGC,CAAD,IAAOL,OAAO,CAACK,CAAC,CAACN,IAAH,CAFhB,CAAN;AAGD;AACF,GANQ,EAMN,EANM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACGA,IAAI,CAAC,CAAD,CAAJ,CAAQO,KAAR,CAAcC,GAAd,CAAkB,CAACC,MAAD,EAASC,GAAT,KAAiB;AAClC,4BACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACE;AAAK,cAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,OACoBV,IAAI,CAAC,CAAD,CAAJ,CAAQW,OAAR,CAAgBD,GAAhB,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAUE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAA8BA,GAA9B;AAAA;AAAA;AAAA;AAAA,gBADF;AAqBD,OAtBA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAxCQZ,W;;KAAAA,W;AA0CT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./CryptoWorld.scss\";\nimport axios from \"axios\";\nfunction CryptoWorld({ Map }) {\n  const [data, SetData] = useState(Map);\n  console.log(data[0]);\n\n  useEffect(async () => {\n    if (data === false) {\n      await axios\n        .get(\"http://localhost:8080/Map/AllMap\")\n        .then((a) => SetData(a.data));\n    }\n  }, []);\n  return (\n    <div className=\"World_App\">\n      <div className=\"Map_container\">\n        {data[0].owner.map((reuslt, idx) => {\n          return (\n            <div className=\"Map_App\" key={idx}>\n              <div className=\"Map_img\">\n                <img src=\"./img/Map/OuTLAND.jpeg\" />\n              </div>\n              <div className=\"Map_Text\">\n                <div className=\"Map_name\">\n                  <h4>mapName</h4> {data[0].MapName[idx]}\n                </div>\n                <div className=\"Map_topography\">\n                  <h4>topography</h4> mountain\n                </div>\n                <div className=\"Map_Token\">\n                  <h4>Token</h4> 3\n                </div>\n                <div className=\"Map_Owner\">\n                  <h4>Owner</h4> sdlkfsl... sdf\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default CryptoWorld;\n"]},"metadata":{},"sourceType":"module"}