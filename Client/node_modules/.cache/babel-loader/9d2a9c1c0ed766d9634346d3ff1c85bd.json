{"ast":null,"code":"var _jsxFileName = \"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { VERIFIER } from \"../../utils/function/openLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LogIn(_ref) {\n  _s();\n\n  let {\n    SetUser,\n    openlogin,\n    SetPrivKey,\n    SetMetamask_address\n  } = _ref;\n  const [ID, SetID] = useState(false);\n  const [password, SetPassword] = useState(false);\n\n  const IdChange = e => {\n    SetID(e.target.value);\n  };\n\n  const passwordChange = e => {\n    SetPassword(e.target.value);\n  };\n\n  const Login = async () => {\n    if (ID === false || password === false) {\n      alert(\"정확한 값을 입력해 주세요!!\");\n    } else {\n      await axios.post(\"http://localhost:8080/Login\", {\n        ID: ID,\n        password: password\n      }).then(result => {\n        if (result.data.message = \"로그인 성공!\") {\n          window.localStorage.setItem(\"User\", JSON.stringify(result.data.Token));\n          window.location.replace(\"http://localhost:3000\");\n        } else {\n          alert(\"재 로그인 부탁..ㅠ\");\n        }\n      });\n    }\n  };\n\n  const onLoginGoogle = async () => {\n    await openlogin.login({\n      loginProvider: VERIFIER.loginProvider,\n      redirectUrl: \"http://localhost:3000/\"\n    });\n    SetPrivKey(openlogin.privKey);\n  };\n\n  const onLoginMetaMask = async () => {\n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    console.log(accounts[0]);\n    SetMetamask_address(accounts[0]);\n    window.location.replace(\"http://localhost:3000\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login_box\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"./img/\\uB85C\\uADF8\\uC778 \\uBC30\\uACBD\\uD654\\uBA74.jpeg\",\n      className: \"background_img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uC544\\uC774\\uB514\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: IdChange,\n        placeholder: \"Write Your ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" \\uD328\\uC2A4\\uC6CC\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: passwordChange,\n        placeholder: \"Write Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login_button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: Login,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Google_button\",\n          onClick: onLoginGoogle,\n          children: \"Google_Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Google_button\",\n          onClick: onLoginMetaMask,\n          children: \"Meta_Mask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/SignIn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"signin\",\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LogIn, \"rUa1nLrAmb+E1ROMQ5b6Uxl/dRQ=\");\n\n_c = LogIn;\nexport default LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"sources":["/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Login/Login.js"],"names":["React","useState","Link","axios","VERIFIER","LogIn","SetUser","openlogin","SetPrivKey","SetMetamask_address","ID","SetID","password","SetPassword","IdChange","e","target","value","passwordChange","Login","alert","post","then","result","data","message","window","localStorage","setItem","JSON","stringify","Token","location","replace","onLoginGoogle","login","loginProvider","redirectUrl","privKey","onLoginMetaMask","accounts","ethereum","request","method","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { VERIFIER } from \"../../utils/function/openLogin\";\n\nfunction LogIn({ SetUser, openlogin, SetPrivKey, SetMetamask_address }) {\n  const [ID, SetID] = useState(false);\n  const [password, SetPassword] = useState(false);\n\n  const IdChange = (e) => {\n    SetID(e.target.value);\n  };\n  const passwordChange = (e) => {\n    SetPassword(e.target.value);\n  };\n  const Login = async () => {\n    if (ID === false || password === false) {\n      alert(\"정확한 값을 입력해 주세요!!\");\n    } else {\n      await axios\n        .post(\"http://localhost:8080/Login\", {\n          ID: ID,\n          password: password,\n        })\n        .then((result) => {\n          if ((result.data.message = \"로그인 성공!\")) {\n            window.localStorage.setItem(\n              \"User\",\n              JSON.stringify(result.data.Token)\n            );\n            window.location.replace(\"http://localhost:3000\");\n          } else {\n            alert(\"재 로그인 부탁..ㅠ\");\n          }\n        });\n    }\n  };\n\n  const onLoginGoogle = async () => {\n    await openlogin.login({\n      loginProvider: VERIFIER.loginProvider,\n      redirectUrl: \"http://localhost:3000/\",\n    });\n    SetPrivKey(openlogin.privKey);\n  };\n\n  const onLoginMetaMask = async () => {\n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    console.log(accounts[0]);\n    SetMetamask_address(accounts[0]);\n    window.location.replace(\"http://localhost:3000\");\n  };\n\n  return (\n    <div className=\"Login_box\">\n      <img src=\"./img/로그인 배경화면.jpeg\" className=\"background_img\" />\n      <div className=\"Login_container\">\n        <div>아이디</div>\n        <input type=\"text\" onChange={IdChange} placeholder=\"Write Your ID\" />\n        <div> 패스워드</div>\n        <input\n          type=\"password\"\n          onChange={passwordChange}\n          placeholder=\"Write Your Password\"\n        />\n        <div className=\"login_button\">\n          <button onClick={Login}>로그인</button>\n\n          <button className=\"Google_button\" onClick={onLoginGoogle}>\n            Google_Login\n          </button>\n          <button className=\"Google_button\" onClick={onLoginMetaMask}>\n            Meta_Mask\n          </button>\n        </div>\n\n        <Link to=\"/SignIn\">\n          <button className=\"signin\">회원가입</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default LogIn;\n"]},"metadata":{},"sourceType":"module"}