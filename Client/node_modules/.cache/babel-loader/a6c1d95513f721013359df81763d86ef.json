{"ast":null,"code":"var _jsxFileName = \"/Users/yuhojin/Desktop/destiny No civilization/Client/src/components/CryptoWorld/CryptoWorld.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./CryptoWorld.scss\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CryptoWorld(_ref) {\n  _s();\n\n  let {\n    Map\n  } = _ref;\n  const [data, SetData] = useState(Map);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"World_App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Map_container\",\n      children: data === false ? \"Loading\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: data[0].owner.map((reuslt, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Map_App\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Map_img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: data[0].src[idx]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Map_Text\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Map_name\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"mapName\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 22,\n                  columnNumber: 23\n                }, this), \" \", data[0].MapName[idx]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Map_topography\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"topography\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 23\n                }, this), \" \", data[0].topography[idx]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Map_Token\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Token\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 23\n                }, this), \" \", data[0].GiveToken[idx]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Map_Owner\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Owner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 23\n                }, this), \" \", data[0].owner[idx]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CryptoWorld, \"4lVfo+lvezh298bUkzL24zo1nhw=\");\n\n_c = CryptoWorld;\nexport default CryptoWorld;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoWorld\");","map":{"version":3,"sources":["/Users/yuhojin/Desktop/destiny No civilization/Client/src/components/CryptoWorld/CryptoWorld.js"],"names":["React","useEffect","useState","axios","CryptoWorld","Map","data","SetData","owner","map","reuslt","idx","src","MapName","topography","GiveToken"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AACA,SAASC,WAAT,OAA8B;AAAA;;AAAA,MAAT;AAAEC,IAAAA;AAAF,GAAS;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAACG,GAAD,CAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACGC,IAAI,KAAK,KAAT,GACC,SADD,gBAGC;AAAA,kBACGA,IAAI,CAAC,CAAD,CAAJ,CAAQE,KAAR,CAAcC,GAAd,CAAkB,CAACC,MAAD,EAASC,GAAT,KAAiB;AAClC,8BACE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,qCACE;AAAK,gBAAA,GAAG,EAAEL,IAAI,CAAC,CAAD,CAAJ,CAAQM,GAAR,CAAYD,GAAZ;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,OACoBL,IAAI,CAAC,CAAD,CAAJ,CAAQO,OAAR,CAAgBF,GAAhB,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAK,gBAAA,SAAS,EAAC,gBAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,OACuBL,IAAI,CAAC,CAAD,CAAJ,CAAQQ,UAAR,CAAmBH,GAAnB,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAOE;AAAK,gBAAA,SAAS,EAAC,WAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,OACkBL,IAAI,CAAC,CAAD,CAAJ,CAAQS,SAAR,CAAkBJ,GAAlB,CADlB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAUE;AAAK,gBAAA,SAAS,EAAC,WAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,OACkBL,IAAI,CAAC,CAAD,CAAJ,CAAQE,KAAR,CAAcG,GAAd,CADlB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA,aAA8BA,GAA9B;AAAA;AAAA;AAAA;AAAA,kBADF;AAqBD,SAtBA;AADH;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAtCQP,W;;KAAAA,W;AAwCT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./CryptoWorld.scss\";\nimport axios from \"axios\";\nfunction CryptoWorld({ Map }) {\n  const [data, SetData] = useState(Map);\n\n  return (\n    <div className=\"World_App\">\n      <div className=\"Map_container\">\n        {data === false ? (\n          \"Loading\"\n        ) : (\n          <>\n            {data[0].owner.map((reuslt, idx) => {\n              return (\n                <div className=\"Map_App\" key={idx}>\n                  <div className=\"Map_img\">\n                    <img src={data[0].src[idx]} />\n                  </div>\n                  <div className=\"Map_Text\">\n                    <div className=\"Map_name\">\n                      <h4>mapName</h4> {data[0].MapName[idx]}\n                    </div>\n                    <div className=\"Map_topography\">\n                      <h4>topography</h4> {data[0].topography[idx]}\n                    </div>\n                    <div className=\"Map_Token\">\n                      <h4>Token</h4> {data[0].GiveToken[idx]}\n                    </div>\n                    <div className=\"Map_Owner\">\n                      <h4>Owner</h4> {data[0].owner[idx]}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default CryptoWorld;\n"]},"metadata":{},"sourceType":"module"}