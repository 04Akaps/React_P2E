{"ast":null,"code":"var _jsxFileName = \"/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Buy/Buy.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport \"./Buy.scss\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\n\nfunction Buy(_ref) {\n  _s();\n\n  let {\n    player,\n    contract,\n    CA\n  } = _ref;\n  const [eth, SetEth] = useState(0);\n  const [Token, SetToken] = useState(0);\n  const [eth_to_token, Set_eth_to_token] = useState(true);\n  const [balance_Token, Set_balance_Token] = useState(0);\n  const [balance_Eth, Set_blance_Eth] = useState(0);\n\n  const changeState = () => {\n    Set_eth_to_token(!eth_to_token);\n    SetEth(0);\n    SetToken(0);\n  };\n\n  const change_balance = (Token_name, e) => {\n    if (Token_name === \"token\") {\n      SetToken(e.target.value);\n      SetEth((e.target.value / 100000000).toFixed(8));\n    } else {\n      SetEth(e.target.value);\n      SetToken(e.target.value * 100000000);\n    }\n  };\n\n  const getUser_balance = async () => {\n    if (player !== false) {\n      await axios.post(\"http://localhost:8080/swap\", {\n        address: player.address\n      }).then(result => {\n        Set_balance_Token(result.data.Token);\n        Set_blance_Eth(result.data.Eth);\n      });\n    }\n  };\n\n  const send_swap = async () => {\n    if (eth_to_token === true) {\n      if (balance_Eth >= eth && eth > 0) {\n        const web3 = await new Web3(window.ethereum);\n        let tx = {\n          from: player.address,\n          to: CA,\n          gas: 500000,\n          gaslimit: 1000000,\n          data: contract.methods.buyTokens().encodeABI(),\n          value: await web3.utils.toWei(eth, \"ether\")\n        };\n        alert_function(\"trs.from\");\n        success_alert(); // await web3.eth.sendTransaction(tx).then(async (trs, err) => {});\n        // await axios\n        //   .post(\"http://localhost:8080/Swap/eth_Token\", {\n        //     Token: Token,\n        //     address: player.address,\n        //   })\n        //   .then((result) => {\n        //     if (result.data.message === \"Token Swap!\") {\n        //       alert(\"hoij\");\n        //     }\n        //   });\n      } else {\n        alert(\"이더가 없습니다.\");\n      }\n    } else {\n      if (balance_Token >= Token && Token > 0) {// await axios.post(\"http://localhost:8080/Swap/Token_eth\", {\n        //   eth: eth,\n        //   Token: Token,\n        //   address: player.address,\n        // });\n      } else {\n        alert(\"토큰이 부족합니다..\");\n      }\n    }\n  };\n\n  const alert_function = from => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"top-end\",\n      showConfirmButton: true,\n      timer: 5000,\n      timerProgressBar: true\n    });\n    Toast.fire({\n      icon: \"success\",\n      title: \"Transaction_Sucess!! plz Waiting a minute!\",\n      text: from\n    });\n  };\n\n  const success_alert = () => {\n    MySwal.fire({\n      icon: \"success\",\n      title: \"Swapping Success!!\"\n    });\n  };\n\n  useEffect(() => {\n    getUser_balance();\n  }, [player]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Buy_App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buy_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Buy_layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Buy_title\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: changeState,\n            className: \"change_button\",\n            children: eth_to_token ? \"ETH -> Token\" : \"Token -> ETH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Eth To Token!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), eth_to_token ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"Buy_eth\",\n            placeholder: \"eth..\",\n            onChange: e => change_balance(\"eth\", e),\n            value: eth === 0 ? \"eth...\" : eth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"Buy_eth\",\n            placeholder: \"Gold..\",\n            onChange: e => change_balance(\"token\", e),\n            value: Token === 0 ? \"Gold...\" : Token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"Buy_eth\",\n            placeholder: \"Gold..\",\n            onChange: e => change_balance(\"token\", e),\n            value: Token === 0 ? \"Gold...\" : Token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"Buy_eth\",\n            placeholder: \"eth..\",\n            onChange: e => change_balance(\"eth\", e),\n            value: eth === 0 ? \"eth...\" : eth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Buy_button\",\n          onClick: send_swap,\n          children: \"\\uC2A4\\uC651!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uC2DC\\uC138 \\uC801\\uC5B4\\uC57C\\uD568\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance\",\n        children: [\"Your_balance_eth : \", balance_Eth, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance\",\n        children: [\"Your_balance_Token : \", balance_Token, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Buy, \"2O+zwRtmLuTBE9AdiEobPdmN+iU=\");\n\n_c2 = Buy;\nexport default Buy;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MySwal\");\n$RefreshReg$(_c2, \"Buy\");","map":{"version":3,"sources":["/Users/yuhojin/Desktop/BEB_01_final2-contract/Client/src/components/Buy/Buy.js"],"names":["axios","React","useEffect","useState","Web3","Swal","withReactContent","MySwal","Buy","player","contract","CA","eth","SetEth","Token","SetToken","eth_to_token","Set_eth_to_token","balance_Token","Set_balance_Token","balance_Eth","Set_blance_Eth","changeState","change_balance","Token_name","e","target","value","toFixed","getUser_balance","post","address","then","result","data","Eth","send_swap","web3","window","ethereum","tx","from","to","gas","gaslimit","methods","buyTokens","encodeABI","utils","toWei","alert_function","success_alert","alert","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","fire","icon","title","text"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport \"./Buy.scss\";\nimport Swal from \"sweetalert2\";\n\nimport withReactContent from \"sweetalert2-react-content\";\nconst MySwal = withReactContent(Swal);\n\nfunction Buy({ player, contract, CA }) {\n  const [eth, SetEth] = useState(0);\n  const [Token, SetToken] = useState(0);\n  const [eth_to_token, Set_eth_to_token] = useState(true);\n\n  const [balance_Token, Set_balance_Token] = useState(0);\n  const [balance_Eth, Set_blance_Eth] = useState(0);\n\n  const changeState = () => {\n    Set_eth_to_token(!eth_to_token);\n    SetEth(0);\n    SetToken(0);\n  };\n\n  const change_balance = (Token_name, e) => {\n    if (Token_name === \"token\") {\n      SetToken(e.target.value);\n      SetEth((e.target.value / 100000000).toFixed(8));\n    } else {\n      SetEth(e.target.value);\n      SetToken(e.target.value * 100000000);\n    }\n  };\n\n  const getUser_balance = async () => {\n    if (player !== false) {\n      await axios\n        .post(\"http://localhost:8080/swap\", {\n          address: player.address,\n        })\n        .then((result) => {\n          Set_balance_Token(result.data.Token);\n          Set_blance_Eth(result.data.Eth);\n        });\n    }\n  };\n  const send_swap = async () => {\n    if (eth_to_token === true) {\n      if (balance_Eth >= eth && eth > 0) {\n        const web3 = await new Web3(window.ethereum);\n\n        let tx = {\n          from: player.address,\n          to: CA,\n          gas: 500000,\n          gaslimit: 1000000,\n          data: contract.methods.buyTokens().encodeABI(),\n          value: await web3.utils.toWei(eth, \"ether\"),\n        };\n        alert_function(\"trs.from\");\n        success_alert();\n        // await web3.eth.sendTransaction(tx).then(async (trs, err) => {});\n\n        // await axios\n        //   .post(\"http://localhost:8080/Swap/eth_Token\", {\n        //     Token: Token,\n        //     address: player.address,\n        //   })\n        //   .then((result) => {\n        //     if (result.data.message === \"Token Swap!\") {\n        //       alert(\"hoij\");\n        //     }\n        //   });\n      } else {\n        alert(\"이더가 없습니다.\");\n      }\n    } else {\n      if (balance_Token >= Token && Token > 0) {\n        // await axios.post(\"http://localhost:8080/Swap/Token_eth\", {\n        //   eth: eth,\n        //   Token: Token,\n        //   address: player.address,\n        // });\n      } else {\n        alert(\"토큰이 부족합니다..\");\n      }\n    }\n  };\n\n  const alert_function = (from) => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"top-end\",\n      showConfirmButton: true,\n      timer: 5000,\n      timerProgressBar: true,\n    });\n\n    Toast.fire({\n      icon: \"success\",\n      title: \"Transaction_Sucess!! plz Waiting a minute!\",\n      text: from,\n    });\n  };\n\n  const success_alert = () => {\n    MySwal.fire({\n      icon: \"success\",\n      title: \"Swapping Success!!\",\n    });\n  };\n\n  useEffect(() => {\n    getUser_balance();\n  }, [player]);\n  return (\n    <div className=\"Buy_App\">\n      <div className=\"Buy_container\">\n        <div className=\"Buy_layout\">\n          <div className=\"Buy_title\">\n            <div onClick={changeState} className=\"change_button\">\n              {eth_to_token ? \"ETH -> Token\" : \"Token -> ETH\"}\n            </div>\n            <div>Eth To Token!!</div>\n          </div>\n          {eth_to_token ? (\n            <>\n              <input\n                type=\"number\"\n                className=\"Buy_eth\"\n                placeholder=\"eth..\"\n                onChange={(e) => change_balance(\"eth\", e)}\n                value={eth === 0 ? \"eth...\" : eth}\n              />\n              <input\n                type=\"number\"\n                className=\"Buy_eth\"\n                placeholder=\"Gold..\"\n                onChange={(e) => change_balance(\"token\", e)}\n                value={Token === 0 ? \"Gold...\" : Token}\n              />\n            </>\n          ) : (\n            <>\n              <input\n                type=\"number\"\n                className=\"Buy_eth\"\n                placeholder=\"Gold..\"\n                onChange={(e) => change_balance(\"token\", e)}\n                value={Token === 0 ? \"Gold...\" : Token}\n              />{\" \"}\n              <input\n                type=\"number\"\n                className=\"Buy_eth\"\n                placeholder=\"eth..\"\n                onChange={(e) => change_balance(\"eth\", e)}\n                value={eth === 0 ? \"eth...\" : eth}\n              />{\" \"}\n            </>\n          )}\n\n          <button className=\"Buy_button\" onClick={send_swap}>\n            스왑!\n          </button>\n          <div>시세 적어야함</div>\n        </div>\n        <div className=\"balance\">Your_balance_eth : {balance_Eth} </div>\n        <div className=\"balance\">Your_balance_Token : {balance_Token} </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Buy;\n"]},"metadata":{},"sourceType":"module"}